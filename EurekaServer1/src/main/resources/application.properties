spring.application.name=EurekaServer1

##tomcat##
server.tomcat.uri-encoding=UTF-8
server.port=8086
spring.profiles.active= peer1
#指定当profile = peer1时主机名是peer1
eureka.instance.hostname=peer1
#是否将自己注册到eureka sever,由于本身现在就是eureka所以为false
eureka.client.register-with-eureka=true
#表示是否从eureka获取注册信息 false相当于单节点的eureka
eureka.client.fetch-registry=true 
#设置与eureka交互的地址将自己注册到peer2这个Eureka上去
eureka.client.service-url.defaultZone = http://user:123@peer2:8087/eureka/


eureka.instance.prefer-ip-address=true
#自定义一些元数据
eureka.instance.metadata-map.myEureka = Mingpeng Gao
eureka.instance.metadata-map.my-metadata= 我自定义的元数据

#是否开启自我保护模式
eureka.server.enable-self-preservation=true


#开启基于http basic的认证
security.basic.enabled=true
#设置eureka安全认证密码
security.user.name=admin
security.user.password=123
#logger
logging.level.root = info


#actuator 可以通过访问/info请求获取一些配置信息
info.app.name = @project.artifactId@
info.app.encoding = @project.build.sourceEncoding@
info.app.java.source = @java.version@
info.app.java.target = @java.version@


